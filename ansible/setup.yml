- name: Disable swap and comment out swap entries in fstab
  hosts: all
  become: yes
  tasks:
    - name: Disable swap
      ansible.builtin.command: swapoff -a

    - name: Comment out swap entries in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '(\s*swap\s+)'
        line: '#\1'
        state: present
        backrefs: yes
    
    - name: Fix symlink for /etc/resolv.conf
      ansible.builtin.command: ln -vfns /run/systemd/resolve/resolv.conf /etc/resolv.conf

    - name: Enable ip tables forwarding traffic
      ansible.builtin.command: iptables -P FORWARD ACCEPT

    - name: Add nameserver 8.8.8.8 to resolv.conf
      lineinfile:
        path: /etc/resolv.conf
        line: "nameserver 8.8.8.8"
        insertafter: EOF  # Ensures it is added at the end of the file
        state: present

    - name: Add nameserver 8.8.4.4 to resolv.conf
      lineinfile:
        path: /etc/resolv.conf
        line: "nameserver 8.8.4.4"
        insertafter: EOF  # Ensures it is added at the end of the file
        state: present

- name: Ensure required kernel modules are loaded
  hosts: all
  become: yes
  tasks:
    - name: Create the modules-load configuration file for Kubernetes
      ansible.builtin.copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf

    - name: Load the overlay module
      ansible.builtin.command: modprobe overlay

    - name: Load the br_netfilter module
      ansible.builtin.command: modprobe br_netfilter

    - name: Create the sysctl configuration file for Kubernetes
      ansible.builtin.copy:
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        dest: /etc/sysctl.d/k8s.conf

    - name: Apply sysctl parameters
      ansible.builtin.command: sysctl --system
      register: sysctl_result
      ignore_errors: yes

    - name: Print sysctl result
      debug:
        var: sysctl_result.stdout_lines



- name: Configure Kubernetes and CRI-O repositories and install packages
  hosts: all
  become: yes
  tasks:
    - name: Create directory for apt keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Remove any existing Kubernetes and CRI-O sources list files
      ansible.builtin.find:
        paths:
          - /etc/apt/sources.list.d/
        patterns: 'kubernetes.sources, cri-o.list'
      register: sources_files


    - name: Remove conflicting sources list files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ sources_files.files }}"


    - name: Remove existing apt keyring files
      ansible.builtin.find:
        paths:
          - /etc/apt/keyrings/
        patterns: 'kubernetes-apt-keyring.gpg, cri-o-apt-keyring.gpg, kubernetes.asc'
      register: keyring_files


    - name: Remove conflicting keyring files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ keyring_files.files }}"


    - name: Add Kubernetes APT repository
      ansible.builtin.deb822_repository:
        name: kubernetes
        types: [deb]
        uris: "https://pkgs.k8s.io/core:/stable:/v1.28/deb/"
        signed_by: "https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key"
        suites: [/]
        state: present
        enabled: yes
    
    - name: Add CRIO apt repository
      ansible.builtin.deb822_repository:
        name: cri-o
        types: [deb]
        uris: " https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/"
        signed_by: "https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/Release.key"
        suites: [/]
        state: present
        enabled: yes

    - name: Update apt package index
      ansible.builtin.apt:
        update_cache: yes

    - name: Install CRI-O and Kubernetes packages
      ansible.builtin.apt:
        name:
          - cri-o
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Start and enable CRI-O service
      ansible.builtin.systemd:
        name: crio.service
        state: started
        enabled: yes


